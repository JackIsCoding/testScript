# encoding: utf-8
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: stream_manager.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='stream_manager.proto',
  package='streammanager',
  syntax='proto3',
  serialized_pb=_b('\n\x14stream_manager.proto\x12\rstreammanager\"x\n\nStreamInfo\x12\x10\n\x08streamID\x18\x01 \x01(\x04\x12\x11\n\tstreamKey\x18\x02 \x01(\t\x12\x12\n\nstreamName\x18\x03 \x01(\t\x12\x31\n\x0cstreamStatus\x18\x04 \x01(\x0e\x32\x1b.streammanager.StreamStatus\"\xea\x01\n\x0cStreamDetail\x12\x10\n\x08streamID\x18\x01 \x01(\x04\x12\x12\n\nbusinessID\x18\x02 \x01(\x03\x12\x11\n\tstreamKey\x18\x03 \x01(\t\x12\x12\n\nstreamName\x18\x04 \x01(\t\x12\x12\n\nstreamType\x18\x05 \x01(\t\x12\x31\n\x0cstreamStatus\x18\x06 \x01(\x0e\x32\x1b.streammanager.StreamStatus\x12\x10\n\x08rateType\x18\x07 \x01(\x05\x12\x10\n\x08originDC\x18\x08 \x01(\t\x12\x11\n\tstartTime\x18\t \x01(\x04\x12\x0f\n\x07\x65ndTime\x18\n \x01(\x04\"6\n\rStreamInfoKey\x12\x12\n\nbusinessID\x18\x01 \x01(\x03\x12\x11\n\tstreamKey\x18\x02 \x01(\t\"\x83\x01\n\x15StreamDetailWithRoute\x12+\n\terrorCode\x18\x01 \x01(\x0e\x32\x18.streammanager.ErrorCode\x12\x10\n\x08originDC\x18\x02 \x01(\t\x12+\n\x06\x64\x65tail\x18\x03 \x01(\x0b\x32\x1b.streammanager.StreamDetail\"\x8b\x01\n\x17\x43reateStreamInternalReq\x12\x10\n\x08sequence\x18\x01 \x01(\x03\x12\x12\n\nbusinessID\x18\x02 \x01(\x03\x12\x11\n\tstreamKey\x18\x03 \x01(\t\x12\x12\n\nstreamName\x18\x04 \x01(\t\x12\x12\n\nstreamType\x18\x05 \x01(\t\x12\x0f\n\x07pullUrl\x18\x06 \x01(\t\"k\n\x18\x43reateStreamInternalResp\x12\x10\n\x08sequence\x18\x01 \x01(\x03\x12+\n\terrorCode\x18\x02 \x01(\x0e\x32\x18.streammanager.ErrorCode\x12\x10\n\x08streamID\x18\x03 \x01(\x03\">\n\x18\x44\x65stroyStreamInternalReq\x12\x10\n\x08sequence\x18\x01 \x01(\x03\x12\x10\n\x08streamID\x18\x02 \x01(\x04\"Z\n\x19\x44\x65stroyStreamInternalResp\x12\x10\n\x08sequence\x18\x01 \x01(\x03\x12+\n\terrorCode\x18\x02 \x01(\x0e\x32\x18.streammanager.ErrorCode\"D\n\x1aQueryStreamInfoInternalReq\x12\x10\n\x08sequence\x18\x01 \x01(\x03\x12\x14\n\x0cstreamIDList\x18\x02 \x03(\x04\"\x9c\x01\n\x1bQueryStreamInfoInternalResp\x12\x10\n\x08sequence\x18\x01 \x01(\x03\x12+\n\terrorCode\x18\x02 \x01(\x0e\x32\x18.streammanager.ErrorCode\x12>\n\x10streamDetailList\x18\x03 \x03(\x0b\x32$.streammanager.StreamDetailWithRoute\"\x83\x01\n\x0f\x43reateStreamReq\x12\x10\n\x08sequence\x18\x01 \x01(\x03\x12\x12\n\nbusinessID\x18\x02 \x01(\x03\x12\x11\n\tstreamKey\x18\x03 \x01(\t\x12\x12\n\nstreamName\x18\x04 \x01(\t\x12\x12\n\nstreamType\x18\x05 \x01(\t\x12\x0f\n\x07pullUrl\x18\x06 \x01(\t\"Q\n\x10\x43reateStreamResp\x12\x10\n\x08sequence\x18\x01 \x01(\x03\x12+\n\terrorCode\x18\x02 \x01(\x0e\x32\x18.streammanager.ErrorCode\"K\n\x10\x44\x65stroyStreamReq\x12\x10\n\x08sequence\x18\x01 \x01(\x03\x12\x12\n\nbusinessID\x18\x02 \x01(\x03\x12\x11\n\tstreamKey\x18\x03 \x01(\t\"R\n\x11\x44\x65stroyStreamResp\x12\x10\n\x08sequence\x18\x01 \x01(\x03\x12+\n\terrorCode\x18\x02 \x01(\x0e\x32\x18.streammanager.ErrorCode\"_\n\x12QueryStreamInfoReq\x12\x10\n\x08sequence\x18\x01 \x01(\x03\x12\x37\n\x11streamInfoKeyList\x18\x02 \x03(\x0b\x32\x1c.streammanager.StreamInfoKey\"\x94\x01\n\x13QueryStreamInfoResp\x12\x10\n\x08sequence\x18\x01 \x01(\x03\x12+\n\terrorCode\x18\x02 \x01(\x0e\x32\x18.streammanager.ErrorCode\x12>\n\x10streamDetailList\x18\x03 \x03(\x0b\x32$.streammanager.StreamDetailWithRoute\":\n\x12QueryStreamListReq\x12\x10\n\x08sequence\x18\x01 \x01(\x03\x12\x12\n\nbusinessID\x18\x02 \x01(\x03\"\x99\x01\n\x13QueryStreamListResp\x12\x10\n\x08sequence\x18\x01 \x01(\x03\x12+\n\terrorCode\x18\x02 \x01(\x0e\x32\x18.streammanager.ErrorCode\x12\x10\n\x08\x61llCount\x18\x03 \x01(\r\x12\x31\n\x0estreamInfoList\x18\x04 \x03(\x0b\x32\x19.streammanager.StreamInfo\"h\n\x0fUpdateStreamReq\x12\x10\n\x08sequence\x18\x01 \x01(\x03\x12\x10\n\x08streamID\x18\x02 \x01(\x04\x12\x31\n\x0cstreamStatus\x18\x03 \x01(\x0e\x32\x1b.streammanager.StreamStatus\"Q\n\x10UpdateStreamResp\x12\x10\n\x08sequence\x18\x01 \x01(\x03\x12+\n\terrorCode\x18\x02 \x01(\x0e\x32\x18.streammanager.ErrorCode*\x96\x01\n\tErrorCode\x12\r\n\tE_UNKNOWN\x10\x00\x12\x08\n\x04\x45_OK\x10\x01\x12\r\n\tE_TIMEOUT\x10\x02\x12\x0f\n\x0b\x45_NOT_EXIST\x10\x03\x12\x13\n\x0f\x45_ALREADY_EXIST\x10\x04\x12\x0e\n\nE_INTERNAL\x10\x05\x12\x14\n\x10\x45_INVALID_PARAMS\x10\x06\x12\x08\n\x04\x45_DB\x10\x07\x12\x0b\n\x07\x45_CACHE\x10\x08*M\n\x0cStreamStatus\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0b\n\x07\x43REATED\x10\x01\x12\n\n\x06OPENED\x10\x02\x12\n\n\x06\x43LOSED\x10\x03\x12\x0b\n\x07\x45RRORED\x10\x04\x32\x90\x06\n\rStreamManager\x12i\n\x14\x43reateStreamInternal\x12&.streammanager.CreateStreamInternalReq\x1a\'.streammanager.CreateStreamInternalResp\"\x00\x12l\n\x15\x44\x65stroyStreamInternal\x12\'.streammanager.DestroyStreamInternalReq\x1a(.streammanager.DestroyStreamInternalResp\"\x00\x12r\n\x17QueryStreamInfoInternal\x12).streammanager.QueryStreamInfoInternalReq\x1a*.streammanager.QueryStreamInfoInternalResp\"\x00\x12Q\n\x0c\x43reateStream\x12\x1e.streammanager.CreateStreamReq\x1a\x1f.streammanager.CreateStreamResp\"\x00\x12T\n\rDestroyStream\x12\x1f.streammanager.DestroyStreamReq\x1a .streammanager.DestroyStreamResp\"\x00\x12Z\n\x0fQueryStreamInfo\x12!.streammanager.QueryStreamInfoReq\x1a\".streammanager.QueryStreamInfoResp\"\x00\x12Z\n\x0fQueryStreamList\x12!.streammanager.QueryStreamListReq\x1a\".streammanager.QueryStreamListResp\"\x00\x12Q\n\x0cUpdateStream\x12\x1e.streammanager.UpdateStreamReq\x1a\x1f.streammanager.UpdateStreamResp\"\x00\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_ERRORCODE = _descriptor.EnumDescriptor(
  name='ErrorCode',
  full_name='streammanager.ErrorCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='E_UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='E_OK', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='E_TIMEOUT', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='E_NOT_EXIST', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='E_ALREADY_EXIST', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='E_INTERNAL', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='E_INVALID_PARAMS', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='E_DB', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='E_CACHE', index=8, number=8,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2256,
  serialized_end=2406,
)
_sym_db.RegisterEnumDescriptor(_ERRORCODE)

ErrorCode = enum_type_wrapper.EnumTypeWrapper(_ERRORCODE)
_STREAMSTATUS = _descriptor.EnumDescriptor(
  name='StreamStatus',
  full_name='streammanager.StreamStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CREATED', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPENED', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOSED', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ERRORED', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2408,
  serialized_end=2485,
)
_sym_db.RegisterEnumDescriptor(_STREAMSTATUS)

StreamStatus = enum_type_wrapper.EnumTypeWrapper(_STREAMSTATUS)
E_UNKNOWN = 0
E_OK = 1
E_TIMEOUT = 2
E_NOT_EXIST = 3
E_ALREADY_EXIST = 4
E_INTERNAL = 5
E_INVALID_PARAMS = 6
E_DB = 7
E_CACHE = 8
UNKNOWN = 0
CREATED = 1
OPENED = 2
CLOSED = 3
ERRORED = 4



_STREAMINFO = _descriptor.Descriptor(
  name='StreamInfo',
  full_name='streammanager.StreamInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='streamID', full_name='streammanager.StreamInfo.streamID', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamKey', full_name='streammanager.StreamInfo.streamKey', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamName', full_name='streammanager.StreamInfo.streamName', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamStatus', full_name='streammanager.StreamInfo.streamStatus', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=39,
  serialized_end=159,
)


_STREAMDETAIL = _descriptor.Descriptor(
  name='StreamDetail',
  full_name='streammanager.StreamDetail',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='streamID', full_name='streammanager.StreamDetail.streamID', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='businessID', full_name='streammanager.StreamDetail.businessID', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamKey', full_name='streammanager.StreamDetail.streamKey', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamName', full_name='streammanager.StreamDetail.streamName', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamType', full_name='streammanager.StreamDetail.streamType', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamStatus', full_name='streammanager.StreamDetail.streamStatus', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rateType', full_name='streammanager.StreamDetail.rateType', index=6,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='originDC', full_name='streammanager.StreamDetail.originDC', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='startTime', full_name='streammanager.StreamDetail.startTime', index=8,
      number=9, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='endTime', full_name='streammanager.StreamDetail.endTime', index=9,
      number=10, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=162,
  serialized_end=396,
)


_STREAMINFOKEY = _descriptor.Descriptor(
  name='StreamInfoKey',
  full_name='streammanager.StreamInfoKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='businessID', full_name='streammanager.StreamInfoKey.businessID', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamKey', full_name='streammanager.StreamInfoKey.streamKey', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=398,
  serialized_end=452,
)


_STREAMDETAILWITHROUTE = _descriptor.Descriptor(
  name='StreamDetailWithRoute',
  full_name='streammanager.StreamDetailWithRoute',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='errorCode', full_name='streammanager.StreamDetailWithRoute.errorCode', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='originDC', full_name='streammanager.StreamDetailWithRoute.originDC', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='detail', full_name='streammanager.StreamDetailWithRoute.detail', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=455,
  serialized_end=586,
)


_CREATESTREAMINTERNALREQ = _descriptor.Descriptor(
  name='CreateStreamInternalReq',
  full_name='streammanager.CreateStreamInternalReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequence', full_name='streammanager.CreateStreamInternalReq.sequence', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='businessID', full_name='streammanager.CreateStreamInternalReq.businessID', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamKey', full_name='streammanager.CreateStreamInternalReq.streamKey', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamName', full_name='streammanager.CreateStreamInternalReq.streamName', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamType', full_name='streammanager.CreateStreamInternalReq.streamType', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pullUrl', full_name='streammanager.CreateStreamInternalReq.pullUrl', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=589,
  serialized_end=728,
)


_CREATESTREAMINTERNALRESP = _descriptor.Descriptor(
  name='CreateStreamInternalResp',
  full_name='streammanager.CreateStreamInternalResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequence', full_name='streammanager.CreateStreamInternalResp.sequence', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errorCode', full_name='streammanager.CreateStreamInternalResp.errorCode', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamID', full_name='streammanager.CreateStreamInternalResp.streamID', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=730,
  serialized_end=837,
)


_DESTROYSTREAMINTERNALREQ = _descriptor.Descriptor(
  name='DestroyStreamInternalReq',
  full_name='streammanager.DestroyStreamInternalReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequence', full_name='streammanager.DestroyStreamInternalReq.sequence', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamID', full_name='streammanager.DestroyStreamInternalReq.streamID', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=839,
  serialized_end=901,
)


_DESTROYSTREAMINTERNALRESP = _descriptor.Descriptor(
  name='DestroyStreamInternalResp',
  full_name='streammanager.DestroyStreamInternalResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequence', full_name='streammanager.DestroyStreamInternalResp.sequence', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errorCode', full_name='streammanager.DestroyStreamInternalResp.errorCode', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=903,
  serialized_end=993,
)


_QUERYSTREAMINFOINTERNALREQ = _descriptor.Descriptor(
  name='QueryStreamInfoInternalReq',
  full_name='streammanager.QueryStreamInfoInternalReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequence', full_name='streammanager.QueryStreamInfoInternalReq.sequence', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamIDList', full_name='streammanager.QueryStreamInfoInternalReq.streamIDList', index=1,
      number=2, type=4, cpp_type=4, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=995,
  serialized_end=1063,
)


_QUERYSTREAMINFOINTERNALRESP = _descriptor.Descriptor(
  name='QueryStreamInfoInternalResp',
  full_name='streammanager.QueryStreamInfoInternalResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequence', full_name='streammanager.QueryStreamInfoInternalResp.sequence', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errorCode', full_name='streammanager.QueryStreamInfoInternalResp.errorCode', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamDetailList', full_name='streammanager.QueryStreamInfoInternalResp.streamDetailList', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1066,
  serialized_end=1222,
)


_CREATESTREAMREQ = _descriptor.Descriptor(
  name='CreateStreamReq',
  full_name='streammanager.CreateStreamReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequence', full_name='streammanager.CreateStreamReq.sequence', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='businessID', full_name='streammanager.CreateStreamReq.businessID', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamKey', full_name='streammanager.CreateStreamReq.streamKey', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamName', full_name='streammanager.CreateStreamReq.streamName', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamType', full_name='streammanager.CreateStreamReq.streamType', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pullUrl', full_name='streammanager.CreateStreamReq.pullUrl', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1225,
  serialized_end=1356,
)


_CREATESTREAMRESP = _descriptor.Descriptor(
  name='CreateStreamResp',
  full_name='streammanager.CreateStreamResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequence', full_name='streammanager.CreateStreamResp.sequence', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errorCode', full_name='streammanager.CreateStreamResp.errorCode', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1358,
  serialized_end=1439,
)


_DESTROYSTREAMREQ = _descriptor.Descriptor(
  name='DestroyStreamReq',
  full_name='streammanager.DestroyStreamReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequence', full_name='streammanager.DestroyStreamReq.sequence', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='businessID', full_name='streammanager.DestroyStreamReq.businessID', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamKey', full_name='streammanager.DestroyStreamReq.streamKey', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1441,
  serialized_end=1516,
)


_DESTROYSTREAMRESP = _descriptor.Descriptor(
  name='DestroyStreamResp',
  full_name='streammanager.DestroyStreamResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequence', full_name='streammanager.DestroyStreamResp.sequence', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errorCode', full_name='streammanager.DestroyStreamResp.errorCode', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1518,
  serialized_end=1600,
)


_QUERYSTREAMINFOREQ = _descriptor.Descriptor(
  name='QueryStreamInfoReq',
  full_name='streammanager.QueryStreamInfoReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequence', full_name='streammanager.QueryStreamInfoReq.sequence', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamInfoKeyList', full_name='streammanager.QueryStreamInfoReq.streamInfoKeyList', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1602,
  serialized_end=1697,
)


_QUERYSTREAMINFORESP = _descriptor.Descriptor(
  name='QueryStreamInfoResp',
  full_name='streammanager.QueryStreamInfoResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequence', full_name='streammanager.QueryStreamInfoResp.sequence', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errorCode', full_name='streammanager.QueryStreamInfoResp.errorCode', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamDetailList', full_name='streammanager.QueryStreamInfoResp.streamDetailList', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1700,
  serialized_end=1848,
)


_QUERYSTREAMLISTREQ = _descriptor.Descriptor(
  name='QueryStreamListReq',
  full_name='streammanager.QueryStreamListReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequence', full_name='streammanager.QueryStreamListReq.sequence', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='businessID', full_name='streammanager.QueryStreamListReq.businessID', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1850,
  serialized_end=1908,
)


_QUERYSTREAMLISTRESP = _descriptor.Descriptor(
  name='QueryStreamListResp',
  full_name='streammanager.QueryStreamListResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequence', full_name='streammanager.QueryStreamListResp.sequence', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errorCode', full_name='streammanager.QueryStreamListResp.errorCode', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='allCount', full_name='streammanager.QueryStreamListResp.allCount', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamInfoList', full_name='streammanager.QueryStreamListResp.streamInfoList', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1911,
  serialized_end=2064,
)


_UPDATESTREAMREQ = _descriptor.Descriptor(
  name='UpdateStreamReq',
  full_name='streammanager.UpdateStreamReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequence', full_name='streammanager.UpdateStreamReq.sequence', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamID', full_name='streammanager.UpdateStreamReq.streamID', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='streamStatus', full_name='streammanager.UpdateStreamReq.streamStatus', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2066,
  serialized_end=2170,
)


_UPDATESTREAMRESP = _descriptor.Descriptor(
  name='UpdateStreamResp',
  full_name='streammanager.UpdateStreamResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequence', full_name='streammanager.UpdateStreamResp.sequence', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errorCode', full_name='streammanager.UpdateStreamResp.errorCode', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2172,
  serialized_end=2253,
)

_STREAMINFO.fields_by_name['streamStatus'].enum_type = _STREAMSTATUS
_STREAMDETAIL.fields_by_name['streamStatus'].enum_type = _STREAMSTATUS
_STREAMDETAILWITHROUTE.fields_by_name['errorCode'].enum_type = _ERRORCODE
_STREAMDETAILWITHROUTE.fields_by_name['detail'].message_type = _STREAMDETAIL
_CREATESTREAMINTERNALRESP.fields_by_name['errorCode'].enum_type = _ERRORCODE
_DESTROYSTREAMINTERNALRESP.fields_by_name['errorCode'].enum_type = _ERRORCODE
_QUERYSTREAMINFOINTERNALRESP.fields_by_name['errorCode'].enum_type = _ERRORCODE
_QUERYSTREAMINFOINTERNALRESP.fields_by_name['streamDetailList'].message_type = _STREAMDETAILWITHROUTE
_CREATESTREAMRESP.fields_by_name['errorCode'].enum_type = _ERRORCODE
_DESTROYSTREAMRESP.fields_by_name['errorCode'].enum_type = _ERRORCODE
_QUERYSTREAMINFOREQ.fields_by_name['streamInfoKeyList'].message_type = _STREAMINFOKEY
_QUERYSTREAMINFORESP.fields_by_name['errorCode'].enum_type = _ERRORCODE
_QUERYSTREAMINFORESP.fields_by_name['streamDetailList'].message_type = _STREAMDETAILWITHROUTE
_QUERYSTREAMLISTRESP.fields_by_name['errorCode'].enum_type = _ERRORCODE
_QUERYSTREAMLISTRESP.fields_by_name['streamInfoList'].message_type = _STREAMINFO
_UPDATESTREAMREQ.fields_by_name['streamStatus'].enum_type = _STREAMSTATUS
_UPDATESTREAMRESP.fields_by_name['errorCode'].enum_type = _ERRORCODE
DESCRIPTOR.message_types_by_name['StreamInfo'] = _STREAMINFO
DESCRIPTOR.message_types_by_name['StreamDetail'] = _STREAMDETAIL
DESCRIPTOR.message_types_by_name['StreamInfoKey'] = _STREAMINFOKEY
DESCRIPTOR.message_types_by_name['StreamDetailWithRoute'] = _STREAMDETAILWITHROUTE
DESCRIPTOR.message_types_by_name['CreateStreamInternalReq'] = _CREATESTREAMINTERNALREQ
DESCRIPTOR.message_types_by_name['CreateStreamInternalResp'] = _CREATESTREAMINTERNALRESP
DESCRIPTOR.message_types_by_name['DestroyStreamInternalReq'] = _DESTROYSTREAMINTERNALREQ
DESCRIPTOR.message_types_by_name['DestroyStreamInternalResp'] = _DESTROYSTREAMINTERNALRESP
DESCRIPTOR.message_types_by_name['QueryStreamInfoInternalReq'] = _QUERYSTREAMINFOINTERNALREQ
DESCRIPTOR.message_types_by_name['QueryStreamInfoInternalResp'] = _QUERYSTREAMINFOINTERNALRESP
DESCRIPTOR.message_types_by_name['CreateStreamReq'] = _CREATESTREAMREQ
DESCRIPTOR.message_types_by_name['CreateStreamResp'] = _CREATESTREAMRESP
DESCRIPTOR.message_types_by_name['DestroyStreamReq'] = _DESTROYSTREAMREQ
DESCRIPTOR.message_types_by_name['DestroyStreamResp'] = _DESTROYSTREAMRESP
DESCRIPTOR.message_types_by_name['QueryStreamInfoReq'] = _QUERYSTREAMINFOREQ
DESCRIPTOR.message_types_by_name['QueryStreamInfoResp'] = _QUERYSTREAMINFORESP
DESCRIPTOR.message_types_by_name['QueryStreamListReq'] = _QUERYSTREAMLISTREQ
DESCRIPTOR.message_types_by_name['QueryStreamListResp'] = _QUERYSTREAMLISTRESP
DESCRIPTOR.message_types_by_name['UpdateStreamReq'] = _UPDATESTREAMREQ
DESCRIPTOR.message_types_by_name['UpdateStreamResp'] = _UPDATESTREAMRESP
DESCRIPTOR.enum_types_by_name['ErrorCode'] = _ERRORCODE
DESCRIPTOR.enum_types_by_name['StreamStatus'] = _STREAMSTATUS

StreamInfo = _reflection.GeneratedProtocolMessageType('StreamInfo', (_message.Message,), dict(
  DESCRIPTOR = _STREAMINFO,
  __module__ = 'stream_manager_pb2'
  # @@protoc_insertion_point(class_scope:streammanager.StreamInfo)
  ))
_sym_db.RegisterMessage(StreamInfo)

StreamDetail = _reflection.GeneratedProtocolMessageType('StreamDetail', (_message.Message,), dict(
  DESCRIPTOR = _STREAMDETAIL,
  __module__ = 'stream_manager_pb2'
  # @@protoc_insertion_point(class_scope:streammanager.StreamDetail)
  ))
_sym_db.RegisterMessage(StreamDetail)

StreamInfoKey = _reflection.GeneratedProtocolMessageType('StreamInfoKey', (_message.Message,), dict(
  DESCRIPTOR = _STREAMINFOKEY,
  __module__ = 'stream_manager_pb2'
  # @@protoc_insertion_point(class_scope:streammanager.StreamInfoKey)
  ))
_sym_db.RegisterMessage(StreamInfoKey)

StreamDetailWithRoute = _reflection.GeneratedProtocolMessageType('StreamDetailWithRoute', (_message.Message,), dict(
  DESCRIPTOR = _STREAMDETAILWITHROUTE,
  __module__ = 'stream_manager_pb2'
  # @@protoc_insertion_point(class_scope:streammanager.StreamDetailWithRoute)
  ))
_sym_db.RegisterMessage(StreamDetailWithRoute)

CreateStreamInternalReq = _reflection.GeneratedProtocolMessageType('CreateStreamInternalReq', (_message.Message,), dict(
  DESCRIPTOR = _CREATESTREAMINTERNALREQ,
  __module__ = 'stream_manager_pb2'
  # @@protoc_insertion_point(class_scope:streammanager.CreateStreamInternalReq)
  ))
_sym_db.RegisterMessage(CreateStreamInternalReq)

CreateStreamInternalResp = _reflection.GeneratedProtocolMessageType('CreateStreamInternalResp', (_message.Message,), dict(
  DESCRIPTOR = _CREATESTREAMINTERNALRESP,
  __module__ = 'stream_manager_pb2'
  # @@protoc_insertion_point(class_scope:streammanager.CreateStreamInternalResp)
  ))
_sym_db.RegisterMessage(CreateStreamInternalResp)

DestroyStreamInternalReq = _reflection.GeneratedProtocolMessageType('DestroyStreamInternalReq', (_message.Message,), dict(
  DESCRIPTOR = _DESTROYSTREAMINTERNALREQ,
  __module__ = 'stream_manager_pb2'
  # @@protoc_insertion_point(class_scope:streammanager.DestroyStreamInternalReq)
  ))
_sym_db.RegisterMessage(DestroyStreamInternalReq)

DestroyStreamInternalResp = _reflection.GeneratedProtocolMessageType('DestroyStreamInternalResp', (_message.Message,), dict(
  DESCRIPTOR = _DESTROYSTREAMINTERNALRESP,
  __module__ = 'stream_manager_pb2'
  # @@protoc_insertion_point(class_scope:streammanager.DestroyStreamInternalResp)
  ))
_sym_db.RegisterMessage(DestroyStreamInternalResp)

QueryStreamInfoInternalReq = _reflection.GeneratedProtocolMessageType('QueryStreamInfoInternalReq', (_message.Message,), dict(
  DESCRIPTOR = _QUERYSTREAMINFOINTERNALREQ,
  __module__ = 'stream_manager_pb2'
  # @@protoc_insertion_point(class_scope:streammanager.QueryStreamInfoInternalReq)
  ))
_sym_db.RegisterMessage(QueryStreamInfoInternalReq)

QueryStreamInfoInternalResp = _reflection.GeneratedProtocolMessageType('QueryStreamInfoInternalResp', (_message.Message,), dict(
  DESCRIPTOR = _QUERYSTREAMINFOINTERNALRESP,
  __module__ = 'stream_manager_pb2'
  # @@protoc_insertion_point(class_scope:streammanager.QueryStreamInfoInternalResp)
  ))
_sym_db.RegisterMessage(QueryStreamInfoInternalResp)

CreateStreamReq = _reflection.GeneratedProtocolMessageType('CreateStreamReq', (_message.Message,), dict(
  DESCRIPTOR = _CREATESTREAMREQ,
  __module__ = 'stream_manager_pb2'
  # @@protoc_insertion_point(class_scope:streammanager.CreateStreamReq)
  ))
_sym_db.RegisterMessage(CreateStreamReq)

CreateStreamResp = _reflection.GeneratedProtocolMessageType('CreateStreamResp', (_message.Message,), dict(
  DESCRIPTOR = _CREATESTREAMRESP,
  __module__ = 'stream_manager_pb2'
  # @@protoc_insertion_point(class_scope:streammanager.CreateStreamResp)
  ))
_sym_db.RegisterMessage(CreateStreamResp)

DestroyStreamReq = _reflection.GeneratedProtocolMessageType('DestroyStreamReq', (_message.Message,), dict(
  DESCRIPTOR = _DESTROYSTREAMREQ,
  __module__ = 'stream_manager_pb2'
  # @@protoc_insertion_point(class_scope:streammanager.DestroyStreamReq)
  ))
_sym_db.RegisterMessage(DestroyStreamReq)

DestroyStreamResp = _reflection.GeneratedProtocolMessageType('DestroyStreamResp', (_message.Message,), dict(
  DESCRIPTOR = _DESTROYSTREAMRESP,
  __module__ = 'stream_manager_pb2'
  # @@protoc_insertion_point(class_scope:streammanager.DestroyStreamResp)
  ))
_sym_db.RegisterMessage(DestroyStreamResp)

QueryStreamInfoReq = _reflection.GeneratedProtocolMessageType('QueryStreamInfoReq', (_message.Message,), dict(
  DESCRIPTOR = _QUERYSTREAMINFOREQ,
  __module__ = 'stream_manager_pb2'
  # @@protoc_insertion_point(class_scope:streammanager.QueryStreamInfoReq)
  ))
_sym_db.RegisterMessage(QueryStreamInfoReq)

QueryStreamInfoResp = _reflection.GeneratedProtocolMessageType('QueryStreamInfoResp', (_message.Message,), dict(
  DESCRIPTOR = _QUERYSTREAMINFORESP,
  __module__ = 'stream_manager_pb2'
  # @@protoc_insertion_point(class_scope:streammanager.QueryStreamInfoResp)
  ))
_sym_db.RegisterMessage(QueryStreamInfoResp)

QueryStreamListReq = _reflection.GeneratedProtocolMessageType('QueryStreamListReq', (_message.Message,), dict(
  DESCRIPTOR = _QUERYSTREAMLISTREQ,
  __module__ = 'stream_manager_pb2'
  # @@protoc_insertion_point(class_scope:streammanager.QueryStreamListReq)
  ))
_sym_db.RegisterMessage(QueryStreamListReq)

QueryStreamListResp = _reflection.GeneratedProtocolMessageType('QueryStreamListResp', (_message.Message,), dict(
  DESCRIPTOR = _QUERYSTREAMLISTRESP,
  __module__ = 'stream_manager_pb2'
  # @@protoc_insertion_point(class_scope:streammanager.QueryStreamListResp)
  ))
_sym_db.RegisterMessage(QueryStreamListResp)

UpdateStreamReq = _reflection.GeneratedProtocolMessageType('UpdateStreamReq', (_message.Message,), dict(
  DESCRIPTOR = _UPDATESTREAMREQ,
  __module__ = 'stream_manager_pb2'
  # @@protoc_insertion_point(class_scope:streammanager.UpdateStreamReq)
  ))
_sym_db.RegisterMessage(UpdateStreamReq)

UpdateStreamResp = _reflection.GeneratedProtocolMessageType('UpdateStreamResp', (_message.Message,), dict(
  DESCRIPTOR = _UPDATESTREAMRESP,
  __module__ = 'stream_manager_pb2'
  # @@protoc_insertion_point(class_scope:streammanager.UpdateStreamResp)
  ))
_sym_db.RegisterMessage(UpdateStreamResp)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class StreamManagerStub(object):
    """流管理接口定义
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CreateStreamInternal = channel.unary_unary(
          '/streammanager.StreamManager/CreateStreamInternal',
          request_serializer=CreateStreamInternalReq.SerializeToString,
          response_deserializer=CreateStreamInternalResp.FromString,
          )
      self.DestroyStreamInternal = channel.unary_unary(
          '/streammanager.StreamManager/DestroyStreamInternal',
          request_serializer=DestroyStreamInternalReq.SerializeToString,
          response_deserializer=DestroyStreamInternalResp.FromString,
          )
      self.QueryStreamInfoInternal = channel.unary_unary(
          '/streammanager.StreamManager/QueryStreamInfoInternal',
          request_serializer=QueryStreamInfoInternalReq.SerializeToString,
          response_deserializer=QueryStreamInfoInternalResp.FromString,
          )
      self.CreateStream = channel.unary_unary(
          '/streammanager.StreamManager/CreateStream',
          request_serializer=CreateStreamReq.SerializeToString,
          response_deserializer=CreateStreamResp.FromString,
          )
      self.DestroyStream = channel.unary_unary(
          '/streammanager.StreamManager/DestroyStream',
          request_serializer=DestroyStreamReq.SerializeToString,
          response_deserializer=DestroyStreamResp.FromString,
          )
      self.QueryStreamInfo = channel.unary_unary(
          '/streammanager.StreamManager/QueryStreamInfo',
          request_serializer=QueryStreamInfoReq.SerializeToString,
          response_deserializer=QueryStreamInfoResp.FromString,
          )
      self.QueryStreamList = channel.unary_unary(
          '/streammanager.StreamManager/QueryStreamList',
          request_serializer=QueryStreamListReq.SerializeToString,
          response_deserializer=QueryStreamListResp.FromString,
          )
      self.UpdateStream = channel.unary_unary(
          '/streammanager.StreamManager/UpdateStream',
          request_serializer=UpdateStreamReq.SerializeToString,
          response_deserializer=UpdateStreamResp.FromString,
          )


  class StreamManagerServicer(object):
    """流管理接口定义
    """

    def CreateStreamInternal(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DestroyStreamInternal(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def QueryStreamInfoInternal(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateStream(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DestroyStream(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def QueryStreamInfo(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def QueryStreamList(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UpdateStream(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_StreamManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CreateStreamInternal': grpc.unary_unary_rpc_method_handler(
            servicer.CreateStreamInternal,
            request_deserializer=CreateStreamInternalReq.FromString,
            response_serializer=CreateStreamInternalResp.SerializeToString,
        ),
        'DestroyStreamInternal': grpc.unary_unary_rpc_method_handler(
            servicer.DestroyStreamInternal,
            request_deserializer=DestroyStreamInternalReq.FromString,
            response_serializer=DestroyStreamInternalResp.SerializeToString,
        ),
        'QueryStreamInfoInternal': grpc.unary_unary_rpc_method_handler(
            servicer.QueryStreamInfoInternal,
            request_deserializer=QueryStreamInfoInternalReq.FromString,
            response_serializer=QueryStreamInfoInternalResp.SerializeToString,
        ),
        'CreateStream': grpc.unary_unary_rpc_method_handler(
            servicer.CreateStream,
            request_deserializer=CreateStreamReq.FromString,
            response_serializer=CreateStreamResp.SerializeToString,
        ),
        'DestroyStream': grpc.unary_unary_rpc_method_handler(
            servicer.DestroyStream,
            request_deserializer=DestroyStreamReq.FromString,
            response_serializer=DestroyStreamResp.SerializeToString,
        ),
        'QueryStreamInfo': grpc.unary_unary_rpc_method_handler(
            servicer.QueryStreamInfo,
            request_deserializer=QueryStreamInfoReq.FromString,
            response_serializer=QueryStreamInfoResp.SerializeToString,
        ),
        'QueryStreamList': grpc.unary_unary_rpc_method_handler(
            servicer.QueryStreamList,
            request_deserializer=QueryStreamListReq.FromString,
            response_serializer=QueryStreamListResp.SerializeToString,
        ),
        'UpdateStream': grpc.unary_unary_rpc_method_handler(
            servicer.UpdateStream,
            request_deserializer=UpdateStreamReq.FromString,
            response_serializer=UpdateStreamResp.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'streammanager.StreamManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaStreamManagerServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """流管理接口定义
    """
    def CreateStreamInternal(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DestroyStreamInternal(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def QueryStreamInfoInternal(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateStream(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DestroyStream(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def QueryStreamInfo(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def QueryStreamList(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UpdateStream(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaStreamManagerStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """流管理接口定义
    """
    def CreateStreamInternal(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    CreateStreamInternal.future = None
    def DestroyStreamInternal(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    DestroyStreamInternal.future = None
    def QueryStreamInfoInternal(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    QueryStreamInfoInternal.future = None
    def CreateStream(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    CreateStream.future = None
    def DestroyStream(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    DestroyStream.future = None
    def QueryStreamInfo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    QueryStreamInfo.future = None
    def QueryStreamList(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    QueryStreamList.future = None
    def UpdateStream(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    UpdateStream.future = None


  def beta_create_StreamManager_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('streammanager.StreamManager', 'CreateStream'): CreateStreamReq.FromString,
      ('streammanager.StreamManager', 'CreateStreamInternal'): CreateStreamInternalReq.FromString,
      ('streammanager.StreamManager', 'DestroyStream'): DestroyStreamReq.FromString,
      ('streammanager.StreamManager', 'DestroyStreamInternal'): DestroyStreamInternalReq.FromString,
      ('streammanager.StreamManager', 'QueryStreamInfo'): QueryStreamInfoReq.FromString,
      ('streammanager.StreamManager', 'QueryStreamInfoInternal'): QueryStreamInfoInternalReq.FromString,
      ('streammanager.StreamManager', 'QueryStreamList'): QueryStreamListReq.FromString,
      ('streammanager.StreamManager', 'UpdateStream'): UpdateStreamReq.FromString,
    }
    response_serializers = {
      ('streammanager.StreamManager', 'CreateStream'): CreateStreamResp.SerializeToString,
      ('streammanager.StreamManager', 'CreateStreamInternal'): CreateStreamInternalResp.SerializeToString,
      ('streammanager.StreamManager', 'DestroyStream'): DestroyStreamResp.SerializeToString,
      ('streammanager.StreamManager', 'DestroyStreamInternal'): DestroyStreamInternalResp.SerializeToString,
      ('streammanager.StreamManager', 'QueryStreamInfo'): QueryStreamInfoResp.SerializeToString,
      ('streammanager.StreamManager', 'QueryStreamInfoInternal'): QueryStreamInfoInternalResp.SerializeToString,
      ('streammanager.StreamManager', 'QueryStreamList'): QueryStreamListResp.SerializeToString,
      ('streammanager.StreamManager', 'UpdateStream'): UpdateStreamResp.SerializeToString,
    }
    method_implementations = {
      ('streammanager.StreamManager', 'CreateStream'): face_utilities.unary_unary_inline(servicer.CreateStream),
      ('streammanager.StreamManager', 'CreateStreamInternal'): face_utilities.unary_unary_inline(servicer.CreateStreamInternal),
      ('streammanager.StreamManager', 'DestroyStream'): face_utilities.unary_unary_inline(servicer.DestroyStream),
      ('streammanager.StreamManager', 'DestroyStreamInternal'): face_utilities.unary_unary_inline(servicer.DestroyStreamInternal),
      ('streammanager.StreamManager', 'QueryStreamInfo'): face_utilities.unary_unary_inline(servicer.QueryStreamInfo),
      ('streammanager.StreamManager', 'QueryStreamInfoInternal'): face_utilities.unary_unary_inline(servicer.QueryStreamInfoInternal),
      ('streammanager.StreamManager', 'QueryStreamList'): face_utilities.unary_unary_inline(servicer.QueryStreamList),
      ('streammanager.StreamManager', 'UpdateStream'): face_utilities.unary_unary_inline(servicer.UpdateStream),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_StreamManager_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('streammanager.StreamManager', 'CreateStream'): CreateStreamReq.SerializeToString,
      ('streammanager.StreamManager', 'CreateStreamInternal'): CreateStreamInternalReq.SerializeToString,
      ('streammanager.StreamManager', 'DestroyStream'): DestroyStreamReq.SerializeToString,
      ('streammanager.StreamManager', 'DestroyStreamInternal'): DestroyStreamInternalReq.SerializeToString,
      ('streammanager.StreamManager', 'QueryStreamInfo'): QueryStreamInfoReq.SerializeToString,
      ('streammanager.StreamManager', 'QueryStreamInfoInternal'): QueryStreamInfoInternalReq.SerializeToString,
      ('streammanager.StreamManager', 'QueryStreamList'): QueryStreamListReq.SerializeToString,
      ('streammanager.StreamManager', 'UpdateStream'): UpdateStreamReq.SerializeToString,
    }
    response_deserializers = {
      ('streammanager.StreamManager', 'CreateStream'): CreateStreamResp.FromString,
      ('streammanager.StreamManager', 'CreateStreamInternal'): CreateStreamInternalResp.FromString,
      ('streammanager.StreamManager', 'DestroyStream'): DestroyStreamResp.FromString,
      ('streammanager.StreamManager', 'DestroyStreamInternal'): DestroyStreamInternalResp.FromString,
      ('streammanager.StreamManager', 'QueryStreamInfo'): QueryStreamInfoResp.FromString,
      ('streammanager.StreamManager', 'QueryStreamInfoInternal'): QueryStreamInfoInternalResp.FromString,
      ('streammanager.StreamManager', 'QueryStreamList'): QueryStreamListResp.FromString,
      ('streammanager.StreamManager', 'UpdateStream'): UpdateStreamResp.FromString,
    }
    cardinalities = {
      'CreateStream': cardinality.Cardinality.UNARY_UNARY,
      'CreateStreamInternal': cardinality.Cardinality.UNARY_UNARY,
      'DestroyStream': cardinality.Cardinality.UNARY_UNARY,
      'DestroyStreamInternal': cardinality.Cardinality.UNARY_UNARY,
      'QueryStreamInfo': cardinality.Cardinality.UNARY_UNARY,
      'QueryStreamInfoInternal': cardinality.Cardinality.UNARY_UNARY,
      'QueryStreamList': cardinality.Cardinality.UNARY_UNARY,
      'UpdateStream': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'streammanager.StreamManager', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
